// Code generated by goctl. DO NOT EDIT.
// Source: device.proto

package device_client

import (
	"context"

	"iot-platform/device/types/device"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	SendMsgReply   = device.SendMsgReply
	SendMsgRequest = device.SendMsgRequest

	Device interface {
		SendMessage(ctx context.Context, in *SendMsgRequest, opts ...grpc.CallOption) (*SendMsgReply, error)
	}

	defaultDevice struct {
		cli zrpc.Client
	}
)

func NewDevice(cli zrpc.Client) Device {
	return &defaultDevice{
		cli: cli,
	}
}

func (m *defaultDevice) SendMessage(ctx context.Context, in *SendMsgRequest, opts ...grpc.CallOption) (*SendMsgReply, error) {
	client := device.NewDeviceClient(m.cli.Conn())
	return client.SendMessage(ctx, in, opts...)
}
